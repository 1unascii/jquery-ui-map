#summary Examples.

= Example constructor call =

Make the selected element a Google map.

{{{
$('#map_canvas').gmap();
}}}

or add some options.

{{{
var callback = function() {
    alert('Google map loaded!');
};

$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326), 'callback': callback });
}}}

= Example getCurrentPosition =

{{{
$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
$('#map_canvas').gmap('getCurrentPosition');
}}}

= Example watchPosition =

{{{
$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
$('#map_canvas').gmap('watchPosition');
}}}

= Example sidebar =

{{{
$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
$('#map_canvas').gmap('sidebar', 'sidebar', google.maps.ControlPosition.LEFT_TOP);
}}}

= Example addMarker =

{{{
$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
$('#map_canvas').gmap('addMarker', { 'position': new google.maps.LatLng(42.345573,-71.098326) } );
}}}

or with a callback

{{{
var callback = function(map, marker) {
    alert('Marker with position ' + marker.getPosition().lat() + ', ' + marker.getPosition().lng() + ' added!');
};

$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
$('#map_canvas').gmap('addMarker', { 'position': new google.maps.LatLng(42.345573,-71.098326) }, callback );
}}}

= Example addInfoWindow =

{{{
var callback = function(map, marker) {
	// To use the gmap method addInfoWindow we need a marker, therefore we call this method in the addMarker callback
    $('#map_canvas').gmap('addInfoWindow', marker, { 'content': 'My Marker' } );
};

$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
$('#map_canvas').gmap('addMarker', { 'position': new google.maps.LatLng(42.345573,-71.098326) }, callback );
}}}

= Example loadJSON =

{{{
$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
$('#map_canvas').gmap('loadJSON', 'http://localhost/json.php' );
}}}

or do the parsing yourself in the callback

{{{
$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
$('#map_canvas').gmap('loadJSON', 'http://localhost/json.php', { 'type': 'activities'}, function(i, marker) {
    // Get the properties you want and add them to the map
    // Create the marker options
    var opts = { 'position': new google.maps.LatLng(marker.lat, marker.lng), 'title': marker.title };
    $('#map_canvas').gmap('addMarker', opts);
});
}}}

= Example loadHTML =

{{{
$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
// Load all elements with the classname "vevent"
$('#map_canvas').gmap('loadHTML', 'microformat', 'vevent');
}}}

The HTML

{{{
<p class="vevent">
	<!-- The link class will be bound to a click event -->
	<a class="link" href="http://conferences.oreillynet.com/pub/w/40/program.html">Web 2.0 Conference</a>
    <a class="url hidden" href="http://conferences.oreillynet.com/pub/w/40/program.html">http://conferences.oreillynet.com/pub/w/40/program.html</a>
    <span class="summary hidden">Web 2.0 Conference</span> 
    <abbr class="dtstart hidden" title="2005-10-05">October 5</abbr>
    <abbr class="dtend hidden" title="2005-10-07">7</abbr>
    <span class="location hidden">Argent Hotel, San Francisco, CA</span>
    <span class="geo hidden">
        <abbr class="latitude" title="37.7749295">&nbsp;</abbr> 
        <abbr class="longitude" title="-122.4194155">&nbsp;</abbr>
    </span>
</p>
}}}

or do something yourself

{{{
$('#map_canvas').gmap({ 'center': new google.maps.LatLng(42.345573,-71.098326) });
$('#map_canvas').gmap('loadHTML', 'microformat', 'vevent', function(markerOpts, node) {
    // We have to add a callback in the addmarker method so we can access the marker just added
    $('#map_canvas').gmap('addMarker', markerOpts, function(map, marker) {
        // Find all a elements in this element with the class link 
        $(node).find('a.link').click( function() {
            alert('The a element with class link was clicked!');
            // Trigger a click on the marker
            google.maps.event.trigger(marker, 'click');
            // Pan to the position
            map.panTo(marker.position);
            // Return false so that we wont accidentally go to the URL
            return false;
        });					
    });
});
}}}